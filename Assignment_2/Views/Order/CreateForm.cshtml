@{
    ViewData["Title"] = "Create Order";
    var customers = ViewData["Customers"] as List<Customer>;
	var products = ViewData["Products"] as List<Product>;
}

<form asp-controller="Order" asp-action="CreateOrder" method="post">
  <div asp-validation-summary="All" class="text-danger">
  </div>
  <div class="form-group">
    <label for="Cust-Name">Customer Name</label>
    <select id="Cust-Name" name="Order.CustomerId" class="form-control">
		@foreach (var customer in customers)
		{
			<option value="@customer.Id">@customer.Name</option>
		}
    </select>
  </div>
  <div class="form-group border border-danger p-3 m-3">
        <label for="Product-Name">Product Name</label>
		<select id="Cust-Name" name="orderItems[0].ProductId" class="form-control">
			@foreach (var product in products)
			{
				<option value="@product.Id">@product.Name</option>
			}
		</select>
		<label for="Quantity">Quantity</label>
		<div class="form form-group">
			<input type="text" id="Quantity" name="orderItems[0].Quantity" class="form-control" value="1" readonly />
			<div class="d-grid gap-1 col-3 mx-auto my-1">
				<button class="btn btn-outline-success p-2" id="incBtn" onclick="incrementQuantity(this)" type="button"><h4>+</h4></button>
				<button class="btn btn-outline-danger p-2" id="decBtn" onclick="decrementQuantity(this)" type="button"><h4>-</h4></button>
			</div>
		</div>
  </div>
	<div class="btn-group" id="btn-group-element">
		<button type="button" class="btn btn-secondary" onclick="addOrderItem()">Add Product</button>
		<button type="submit" class="btn btn-primary">Submit</button>
	</div>
</form>

<script>
	let orderItemIndex = 1;
	function addOrderItem() {
		let btnGroup = document.getElementById("btn-group-element");
		let product =
		`
		<div class="form-group border border-danger p-3 m-3">
     <label for="Product-Name">Product Name</label>
     <select id="Cust-Name" name="orderItems[${orderItemIndex}].ProductId" class="form-control">
				@foreach (var product in products)
				{
				<option value="@product.Id">@product.Name</option>
				}
     </select>
     <label for="Quantity">Quantity</label>
	 <input type="text" id="Quantity" name="orderItems[${orderItemIndex}].Quantity"" class="form-control" value="1" readonly />
		<div class="d-grid gap-1 col-3 mx-auto my-1">
			<button class="btn btn-outline-success p-2" id="incBtn" onclick="incrementQuantity(this)" type="button"><h4>+</h4></button>
			<button class="btn btn-outline-danger p-2" id="decBtn" onclick="decrementQuantity(this)" type="button"><h4>-</h4></button>
		</div>
		</div>
		`;
		if(orderItemIndex == @products.Count)
		{
			btnGroup.children[0].style.display = "none";
		}
		else {
			btnGroup.insertAdjacentHTML('beforebegin', product);
			orderItemIndex++;
		}
	}
	function incrementQuantity(button) {
		let quantityInput = button.parentElement.parentElement.querySelector("#Quantity");
		if(parseInt(quantityInput.value) < 10)
			quantityInput.value = parseInt(quantityInput.value) + 1;
	}

	function decrementQuantity(button) {
		let quantityInput = button.parentElement.parentElement.querySelector("#Quantity");
		if (parseInt(quantityInput.value) > 1)
			quantityInput.value = parseInt(quantityInput.value) - 1;
	}
</script>
